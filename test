from langchain.schema import Document

def chunk_document(self, preprocess_chunk):
    final_chunk = []

    print(f"Total input chunks received: {len(preprocess_chunk)}")

    for i in range(len(preprocess_chunk)):
        chunk = preprocess_chunk[i]

        # ✅ Skip if not a dictionary
        if not isinstance(chunk, dict):
            print(f"Skipping index {i}: not a dict -> {type(chunk)}")
            continue

        # ✅ Ensure 'metadata' key exists
        if "metadata" not in chunk:
            chunk["metadata"] = {}

        # ✅ Optionally update metadata with expected fields if present
        chunk["metadata"].update({
            "heading": chunk.get("heading", ""),
            "subheading": chunk.get("subheading", ""),
            "table": chunk.get("table", ""),
            "image": chunk.get("image", "")
        })

        # ✅ Check for paragraph content
        paragraph = chunk.get("paragraph")
        if paragraph is None:
            print(f"Chunk {i} has no paragraph. Adding with 'None' content.")
            doc = Document(
                page_content="None",
                metadata=chunk["metadata"]
            )
        else:
            doc = Document(
                page_content=paragraph,
                metadata=chunk["metadata"]
            )

        # ✅ Append the created document
        final_chunk.append(doc)

    print(f"Total valid documents created: {len(final_chunk)}")
    return final_chunk
