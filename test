import numpy as np
from sklearn.manifold import TSNE
import matplotlib.pyplot as plt

# Sample data: Replace with your actual embeddings and labels
# embeddings shape: (n_samples, embedding_dim)
embeddings = np.random.rand(300, 768)  # Replace with your BERT embeddings
labels = np.array([0]*100 + [1]*100 + [2]*100)  # Replace with your labels (0: travel, 1: lifestyle, 2: member service)
current_embedding = np.random.rand(1, 768)  # Replace with your current embedding

# Append the current embedding to the existing embeddings
all_embeddings = np.vstack([embeddings, current_embedding])
all_labels = np.append(labels, 3)  # Label '3' for the current embedding

# Apply t-SNE
tsne = TSNE(n_components=2, random_state=42, perplexity=30, n_iter=1000)
reduced_embeddings = tsne.fit_transform(all_embeddings)

# Plot the t-SNE result
plt.figure(figsize=(10, 8))
colors = ['blue', 'green', 'orange', 'red']
labels_map = ['Travel', 'Lifestyle', 'Member Service', 'Current']

for i in range(4):  # Iterate through all classes including the current embedding
    idx = all_labels == i
    plt.scatter(reduced_embeddings[idx, 0], reduced_embeddings[idx, 1], 
                label=labels_map[i], color=colors[i], s=50, alpha=0.6 if i != 3 else 1.0)

# Add labels and legend
plt.title('t-SNE Visualization of BERT Embeddings')
plt.xlabel('t-SNE Dimension 1')
plt.ylabel('t-SNE Dimension 2')
plt.legend()
plt.show()
