import uuid

def insert_cluster_triplets(keyspace, table, file_name, cluster_data, host='127.0.0.1', username=None, password=None):
    from cassandra.cluster import Cluster
    from cassandra.auth import PlainTextAuthProvider

    auth = PlainTextAuthProvider(username, password) if username else None
    cluster = Cluster([host], auth_provider=auth) if auth else Cluster([host])
    session = cluster.connect()
    session.set_keyspace(keyspace)

    # Prepare column names and placeholders dynamically
    cluster_columns = [f"cluster{i+1}" for i in range(len(cluster_data))]
    column_names = ", ".join(["id", "file_name"] + cluster_columns)
    placeholders = ", ".join(["%s"] * (2 + len(cluster_data)))

    query = f"""
    INSERT INTO {table} ({column_names})
    VALUES ({placeholders});
    """

    values = [uuid.uuid4(), file_name] + cluster_data
    session.execute(query, values)

    session.shutdown()
    cluster.shutdown()
    print(f"Inserted triplets for file '{file_name}' into table '{table}'.")
