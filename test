import re
from typing import List, Optional

def group_blocks_from_list(
    lines: List[str],
    start_rx: re.Pattern,
    stop_rx: Optional[re.Pattern] = None,
    stop_substrings: Optional[List[str]] = None,
    joiner: str = " ",
    include_stop_line: bool = True,
) -> List[str]:
    """
    Group consecutive lines from a list into blocks.
    - Block starts when a line matches start_rx.
    - Block ends when a line matches stop_rx, or contains any substring in stop_substrings,
      or when another start line appears.
    """
    stop_substrings = stop_substrings or []
    out, buf = [], []
    capturing = False

    def flush():
        nonlocal buf
        if buf:
            out.append(joiner.join(s.strip() for s in buf if s.strip()))
            buf = []

    for line in lines:
        s = (line or "").strip()

        if start_rx.search(s):  # new block starts
            flush()
            capturing = True
            buf.append(s)
            continue

        if not capturing:
            continue

        buf.append(s)

        stop_hit = False
        if stop_rx and stop_rx.search(s):
            stop_hit = True
        elif any(sub in s for sub in stop_substrings):
            stop_hit = True

        if stop_hit:
            if not include_stop_line:
                buf.pop()
            flush()
            capturing = False

    flush()
    return out


# ---------- Example patterns for your RFR use-case ----------

RFR_START_RX = re.compile(r"^\s*?RFR\s*\d+?:?\s*<Q\d+:", re.IGNORECASE)
STOP_SUBS = ["evaluation dataset>"]

# Example usage with your list of lines
lines = [
    "[RFR1]: <Q3: Some question text",
    "First paragraph of answer.",
    "Second paragraph of answer.",
    "Ends with evaluation dataset>",
    "[RFR2]: <Q4: Another question",
    "One line answer.",
    "evaluation dataset>",
]

blocks = group_blocks_from_list(lines, start_rx=RFR_START_RX, stop_substrings=STOP_SUBS)

print(blocks)
# [
#   "[RFR1]: <Q3: Some question text First paragraph of answer. Second paragraph of answer. Ends with evaluation dataset>",
#   "[RFR2]: <Q4: Another question One line answer. evaluation dataset>"
# ]
