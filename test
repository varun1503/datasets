from transformers import BertTokenizer, BertModel
import torch

# Load BERT model and tokenizer
tokenizer = BertTokenizer.from_pretrained('bert-base-uncased')
model = BertModel.from_pretrained('bert-base-uncased')

def get_embeddings(texts):
    inputs = tokenizer(texts, return_tensors='pt', padding=True, truncation=True, max_length=512)
    with torch.no_grad():
        outputs = model(**inputs)
    # Use CLS token embedding as representation
    return outputs.last_hidden_state[:, 0, :].numpy()

# Generate embeddings for each class
lifestyle_embeddings = get_embeddings(lifestyle['text'].tolist())
members_service_embeddings = get_embeddings(members_service['text'].tolist())
travel_embeddings = get_embeddings(travel['text'].tolist())
