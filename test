def retrieve_similar_chunks_cosine(self, query_vector, top_k):
    try:
        # Reinitialize Cassandra connection if needed
        if self.cluster is None or self.cluster.is_shutdown:
            auth_provider = PlainTextAuthProvider(username=USER_NAME, password=PASSWORD)
            self.cluster = Cluster(self.clusternode, auth_provider=auth_provider)
        
        if self.session is None or self.session.is_shutdown:
            self.session = self.cluster.connect()
            self.session.set_keyspace(self.keyspace)

        # Convert vector to string format for ANN
        vector_str = "[" + ",".join(f"{v:.6f}" for v in query_vector) + "]"
        
        query = f"""
        SELECT row_id, bdy_blob_tx, wtda_val_tx, prtn_id 
        FROM {self.table}
        ORDER BY vector ANN OF {vector_str} LIMIT {top_k};
        """

        rows = self.session.execute(query)

        # Filter duplicate bdy_blob_tx
        seen = set()
        results = []

        for row in rows:
            if row.bdy_blob_tx not in seen:
                seen.add(row.bdy_blob_tx)
                results.append(row)

        return results

    except Exception as e:
        print(f"Error during retrieval: {e}")
        return []
