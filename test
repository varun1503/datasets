import re
from ast import literal_eval

def split_answer_and_triplets(answer: str):
    try:
        # Split on the known section header
        text_part, dict_part = answer.split("2. **Filtered/pruned version of the `triplet_dict`**:")

        # Extract the dictionary content
        match = re.search(r"triplet_dict\s*=\s*({.*?})", dict_part, re.DOTALL)
        if not match:
            raise ValueError("Could not find triplet_dict in the answer.")

        dict_str = match.group(1)

        # Fix: quote UUID values
        dict_str_cleaned = re.sub(r"UUID(.*?)", r"'\1'", dict_str)

        # Evaluate the cleaned dictionary
        triplet_dict = literal_eval(dict_str_cleaned.strip())

        return text_part.strip(), triplet_dict

    except Exception as e:
        raise ValueError(f"Failed to parse answer and triplet_dict: {e}")
