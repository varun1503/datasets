import re, json, unicodedata
from docx import Document

def norm(s: str) -> str:
    if not s:
        return ""
    s = unicodedata.normalize("NFKC", s)
    s = s.replace("\u00A0", " ")
    return re.sub(r"\s+", " ", s).strip()

RFR_RX = re.compile(r"RFR\d+", re.IGNORECASE)
RESP_HDR_RX = re.compile(r"^?Modeling Team[’']?s Response?:?$", re.IGNORECASE)
BRACKETS_RX = re.compile(r"<\s*([^>]+?)\s*>")

def extract_section_and_question(line: str):
    bits = [norm(b) for b in BRACKETS_RX.findall(line)]
    section, question = "", ""
    for b in bits:
        if b.endswith("?"):
            question = b
        else:
            section = b
    return section, question

def parse_rfr(path: str):
    doc = Document(path)
    lines = [norm(p.text) for p in doc.paragraphs if norm(p.text)]

    rows = []
    i = 0
    while i < len(lines):
        line = lines[i]

        if RFR_RX.search(line):
            section, question = extract_section_and_question(line)
            followups, fidx = {}, 1
            i += 1

            while i < len(lines):
                cur = lines[i]
                if RFR_RX.search(cur):  # next RFR
                    break
                if RESP_HDR_RX.match(cur):
                    i += 1
                    resp_lines = []
                    while i < len(lines):
                        nxt = lines[i]
                        if RESP_HDR_RX.match(nxt) or RFR_RX.search(nxt):
                            break
                        resp_lines.append(nxt)
                        i += 1
                    if resp_lines:
                        followups[f"followup q{fidx}"] = norm(" ".join(resp_lines))
                        fidx += 1
                    continue
                i += 1

            rows.append({
                "IMVP Question": question,
                "Section": section,
                "rfr": followups,
                "doctype": "rfr"
            })
            continue
        i += 1
    return rows

if __name__ == "__main__":
    data = parse_rfr("your_file.docx")  # replace with your uploaded file path
    print(json.dumps(data, indent=2, ensure_ascii=False))
