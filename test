import re
from typing import List, Dict
from collections import OrderedDict

def split_rfr_blocks(lines: List[str]) -> List[Dict[str, List[str]]]:
    """
    Splits a list of lines into RFR blocks with two sections:
      - 'ref': from the RFR line until just before "Modeling Team Response"
      - 'model_response': from "Modeling Team Response" until the next RFR
    Returns a list of dicts, one per RFR.
    """

    RFR_RX = re.compile(r"\s*RFR\s*\d+\s*", re.IGNORECASE)
    MODEL_RX = re.compile(r"\bModel(?:l?ing)?\s+Team(?:â€™s|'s)?\s+Response\b|\bModel\s+team\s+ready\b", re.IGNORECASE)

    out = []
    current = None
    section = None  # can be 'ref' or 'model_response'

    for raw in lines:
        line = (raw or "").strip()
        if not line:
            continue

        # If new RFR starts, push old block and reset
        if RFR_RX.search(line):
            if current:
                out.append(current)
            current = {"rfr": line, "ref": [], "model_response": []}
            section = "ref"
            continue

        # If modeling team response marker, switch section
        if MODEL_RX.search(line):
            section = "model_response"
            current["model_response"].append(line)  # include the marker itself
            continue

        # Add line to the active section
        if current and section:
            current[section].append(line)

    # Flush last block
    if current:
        out.append(current)

    return out
