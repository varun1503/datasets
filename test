pca = PCA(n_components=2)
target_reduced = pca.fit_transform(target_matrix)

# Step 6: Visualize the target data with labels
plt.figure(figsize=(10, 6))

# Plot target data points with specific labels
for idx, (x, y) in enumerate(target_reduced):
    color = 'red' if target_labels[idx] == -1 else 'blue'
    label = "Outlier" if target_labels[idx] == -1 else "Inlier"
    plt.scatter(x, y, c=color, label=label if label not in plt.gca().get_legend_handles_labels()[1] else None)
    plt.text(x + 0.05, y + 0.05, f"Target {idx+1}", fontsize=10)

# Add labeling and legend
plt.title("Target Data: Isolation Forest Outlier Detection")
plt.xlabel("PCA Dimension 1")
plt.ylabel("PCA Dimension 2")
plt.legend(loc="best", fontsize="medium")
plt.grid(True)
plt.show()
