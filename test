import requests
import json

def call_api(url: str, payload: dict = None, headers: dict = None, method: str = "POST"):
    """
    Call an API endpoint.

    Args:
        url (str): The API endpoint URL
        payload (dict, optional): The request body (for POST/PUT). Defaults to None.
        headers (dict, optional): HTTP headers. Defaults to {"Content-Type": "application/json"}.
        method (str, optional): HTTP method (GET, POST, PUT, DELETE). Defaults to "POST".

    Returns:
        dict: JSON response from the API or error message
    """
    if headers is None:
        headers = {"Content-Type": "application/json"}

    try:
        if method.upper() == "GET":
            response = requests.get(url, params=payload, headers=headers, timeout=30)
        elif method.upper() == "POST":
            response = requests.post(url, json=payload, headers=headers, timeout=30)
        elif method.upper() == "PUT":
            response = requests.put(url, json=payload, headers=headers, timeout=30)
        elif method.upper() == "DELETE":
            response = requests.delete(url, headers=headers, timeout=30)
        else:
            return {"error": f"Unsupported method: {method}"}

        response.raise_for_status()
        return response.json()

    except requests.exceptions.RequestException as e:
        return {"error": str(e)}


# Example usage:
if __name__ == "__main__":
    api_url = "https://httpbin.org/post"  # test API endpoint
    data = {"message": "Hello from Python!"}
    result = call_api(api_url, payload=data, method="POST")
    print(json.dumps(result, indent=2))
