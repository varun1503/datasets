def parse_table_with_merged_cells(table):
    """
    Parses a docx table and handles vertically merged cells using <w:vMerge/>.
    Also removes only exact duplicate rows (based on combined cell text).
    Returns a list of cleaned rows.
    """
    merged_cells_tracker = {}  # (col_idx) -> previous value
    parsed_rows = []
    prev_row_text = None

    for row in table.rows:
        parsed_row = []

        for col_idx, cell in enumerate(row.cells):
            tc = cell._tc
            tcPr = tc.tcPr
            vmerge = tcPr.vMerge if tcPr is not None and tcPr.vMerge is not None else None

            if vmerge is not None:
                val = vmerge.val
                if val is None or val == 'continue':
                    parsed_row.append(merged_cells_tracker.get(col_idx, ""))
                else:  # val == 'restart'
                    cell_text = get_cell_text(cell)
                    merged_cells_tracker[col_idx] = cell_text
                    parsed_row.append(cell_text)
            else:
                cell_text = get_cell_text(cell)
                merged_cells_tracker[col_idx] = cell_text
                parsed_row.append(cell_text)

        # Check for exact duplicate row before appending
        row_text = " | ".join([cell.strip() for cell in parsed_row])
        if row_text != prev_row_text:
            parsed_rows.append(parsed_row)
            prev_row_text = row_text  # Update for next comparison

    return parsed_rows
