import re
from typing import List

# Define patterns
RFR_RX = re.compile(r"RFR\s*(\d+):", re.IGNORECASE)
MODEL_RX = re.compile(r"Model(?:l?ing)?\s+Team(?:’s|'s)?\s+Response:", re.IGNORECASE)

def extract_rfr_model_blocks(lines: List[str]) -> List[str]:
    """
    Parses a list of lines, extracts RFR + Modeling Team Response pairs,
    and replaces them with single-line formatted strings in the same list position.
    All other lines remain untouched.
    """
    output = []
    i = 0
    n = len(lines)

    while i < n:
        line = lines[i].strip()

        # Check for start of an RFR block
        rfr_match = RFR_RX.search(line)
        if rfr_match:
            rfr_number = rfr_match.group(1)
            rfr_key = f"RFR {rfr_number}:"
            ref_lines = [line]
            model_lines = []
            i += 1

            # Collect until we hit Modeling Team Response
            while i < n and not MODEL_RX.search(lines[i]):
                ref_lines.append(lines[i].strip())
                i += 1

            # If MODEL_RX is found, collect model response too
            if i < n and MODEL_RX.search(lines[i]):
                model_lines.append(lines[i].strip())
                i += 1
                while i < n and not RFR_RX.search(lines[i]):
                    model_lines.append(lines[i].strip())
                    i += 1

            # Build flat output string
            combined = f"{rfr_key} ref: {' '.join(ref_lines)} modelling team response: {' '.join(model_lines)}"
            output.append(combined)
        else:
            output.append(lines[i])
            i += 1

    return output
