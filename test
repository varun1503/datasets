from docx import Document
from docx.text.paragraph import Paragraph
import pandas as pd

def replace_finding_details_section(doc_path: str, df: pd.DataFrame, output_path: str):
    """
    Opens an existing Word doc, finds the 'Finding Details' section,
    removes all content below it until the next heading, and inserts
    formatted findings/challenges/responses from the given DataFrame.
    """

    doc = Document(doc_path)
    paragraphs = doc.paragraphs

    # ---------- 1️⃣ Find the start and end of 'Finding Details' section ----------
    start_idx = None
    end_idx = None

    for i, p in enumerate(paragraphs):
        text = p.text.strip().lower()
        if "finding details" in text:
            start_idx = i
            continue

        # If we've found start, next bold heading signals the end
        if start_idx is not None and (p.style.name.startswith("Heading") or "page" in text.lower()):
            end_idx = i
            break

    if start_idx is None:
        raise ValueError("Could not find 'Finding Details' section in the document.")

    if end_idx is None:
        end_idx = len(paragraphs)

    # ---------- 2️⃣ Delete existing content under 'Finding Details' ----------
    remove_indices = list(range(start_idx + 1, end_idx))
    for idx in reversed(remove_indices):
        p = paragraphs[idx]._element
        p.getparent().remove(p)

    # ---------- 3️⃣ Insert new content ----------
    insert_paragraph = paragraphs[start_idx]

    for i, row in df.iterrows():
        # Finding
        p = insert_paragraph.insert_paragraph_before(f"Finding M{i+1}")
        r = p.runs[0]
        r.bold = True

        p = insert_paragraph.insert_paragraph_before(str(row.get("Finding Details", "")))
        p.style = "Normal"

        # Challenge
        p = insert_paragraph.insert_paragraph_before(f"Challenge M{i+1}")
        r = p.runs[0]
        r.bold = True

        p = insert_paragraph.insert_paragraph_before(str(row.get("RFR Key Question", "")))
        p.style = "Normal"

        # Modeling Team Response
        p = insert_paragraph.insert_paragraph_before(f"Modeling Team Response M{i+1}")
        r = p.runs[0]
        r.bold = True

        p = insert_paragraph.insert_paragraph_before(str(row.get("Modeling Team Response", "")))
        p.style = "Normal"

        # Add a blank line between findings
        insert_paragraph.insert_paragraph_before("")

    # ---------- 4️⃣ Save updated document ----------
    doc.save(output_path)
    print(f"✅ Updated document saved to: {output_path}")


# Example usage
df = pd.DataFrame({
    "Finding Details": ["Model trained for US market without retraining for ANZ/Canada"],
    "RFR Key Question": ["Model trained only on US data (2022–23), now used for ANZ/Canada"],
    "Modeling Team Response": ["Modeling team added key assumptions for retraining."]
})

replace_finding_details_section(
    doc_path="your_existing_template.docx",
    df=df,
    output_path="updated_validation_report.docx"
)
