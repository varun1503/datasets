def display_graph_simple(self, graph):
    try:
        # Access the internal NetworkX graph
        graph_data = graph._graph  # Undocumented but works for CompiledGraph

        G = nx.DiGraph()
        nodes = set()
        edges = []

        for edge in graph_data.edges:
            nodes.add(edge[0])
            nodes.add(edge[1])
            edges.append((edge[0], edge[1]))

        G.add_nodes_from(nodes)
        G.add_edges_from(edges)

        plt.figure(figsize=(10, 6))
        pos = nx.kamada_kawai_layout(G)

        nx.draw_networkx_nodes(G, pos, node_color='lightblue', node_size=500)
        nx.draw_networkx_edges(G, pos, edge_color="gray", arrows=True, arrowsize=15)
        nx.draw_networkx_labels(G, pos)

        plt.title("Graph Workflow")
        plt.axis('off')

        buf = io.BytesIO()
        plt.savefig(buf, format='png', bbox_inches='tight')
        buf.seek(0)

        img_bytes = buf.read()
        encoded = base64.b64encode(img_bytes).decode('utf-8')
        plt.close()

        return encoded

    except Exception as e:
        print(f"Visualization error: {e}")
        return None
