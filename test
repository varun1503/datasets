if tag == qn('w:tbl'):
    # — First, look for any nested <w:tbl> inside this outer table —
    nested_tbl_els = child.findall('.//w:tbl', namespaces=NSMAP)
    if nested_tbl_els:
        # We’ll ignore the outer table itself, and emit each nested one as its own item:
        for nt_el in nested_tbl_els:
            nested_tbl = Table(nt_el, doc)
            nested_data = TableParser().parse_with_merged_cells(nested_tbl)

            tbl_id = self.generate_id()
            parent = get_current_parent()
            table_item = {
                "id":        tbl_id,
                "type":      "table",
                "data":      nested_data,
                "source":    file_name,
                "parent_id": parent["id"] if parent else None
            }
            if parent:
                parent["child_ids"].append(tbl_id)
            ordered_content.append(table_item)

        # skip adding the flattened “outer” table:
        continue

    # — Otherwise no nested tables, parse as normal —
    table_obj   = Table(child, doc)
    table_data  = TableParser().parse_with_merged_cells(table_obj)
    tbl_id      = self.generate_id()
    parent      = get_current_parent()
    table_item = {
        "id":        tbl_id,
        "type":      "table",
        "data":      table_data,
        "source":    file_name,
        "parent_id": parent["id"] if parent else None
    }
    if parent:
        parent["child_ids"].append(tbl_id)
    ordered_content.append(table_item)
