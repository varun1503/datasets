def preprocess_content_chunks(content, max_chunk_len=5000):
    preprocess_chunk = []
    current_paragraph = ""
    current_heading = None
    current_subheading = None
    current_tables = []
    current_image_contexts = []

    def flush_chunk():
        nonlocal current_paragraph, current_tables, current_image_contexts
        if current_paragraph.strip():
            chunk = {
                "heading": current_heading,
                "subheading": current_subheading,
                "paragraph": current_paragraph.strip(),
                "table": current_tables if current_tables else None,
                "image_context": current_image_contexts if current_image_contexts else None
            }
            preprocess_chunk.append(chunk)
            current_paragraph = ""
            current_tables = []
            current_image_contexts = []

    for item in content:
        item_type = item.get("type")

        # --- Heading Level 1 ---
        if item_type == "heading" and item.get("level") == 1:
            flush_chunk()
            current_heading = item["text"]
            current_subheading = None

        # --- Heading Level 2 (Subheading) ---
        elif item_type == "heading" and item.get("level") == 2:
            flush_chunk()
            current_subheading = item["text"]

        # --- Paragraph Text ---
        elif item_type == "paragraph":
            text = item.get("text", "").strip()
            if not text:
                continue
            if len(current_paragraph + " " + text) > max_chunk_len:
                flush_chunk()
            current_paragraph += " " + text

        # --- Table Handling (append, don't flush yet) ---
        elif item_type == "table":
            current_tables.append(item.get("data", []))

        # --- Image Handling (append, don't flush yet) ---
        elif item_type == "image":
            context = item.get("image_context", "").strip()
            if context:
                current_image_contexts.append(context)

    flush_chunk()
    return preprocess_chunk
