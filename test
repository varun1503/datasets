import numpy as np

# Sample token SHAP values (each row represents a tile)
token_shap_dict = {
    "dispute": np.array([
        [-0.00269948, 0.10008446, -0.09738498],
        [-0.00531142, 0.03690223, -0.0315981],
        [-0.00107645, 0.01291593, -0.01183948]
    ])
}

# Compute column-wise SHAP statistics
shap_values = np.array(token_shap_dict['dispute'])  # Convert list to array

# Compute mean, standard deviation, and kurtosis column-wise
mean_shap = np.mean(shap_values, axis=0)  # Mean column-wise
std_shap = np.std(shap_values, axis=0)  # Standard deviation column-wise
kurtosis_shap = np.apply_along_axis(
    lambda x: (np.mean((x - np.mean(x))**4) / (np.std(x)**4)), axis=0, arr=shap_values
)  # Kurtosis manually

# Output the results
print("Mean SHAP values column-wise:", mean_shap)
print("Std SHAP values column-wise:", std_shap)
print("Kurtosis SHAP values column-wise:", kurtosis_shap)
