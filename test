import re
import nltk
import spacy
from nltk.tokenize import word_tokenize
from nltk.corpus import stopwords
from nltk.stem import PorterStemmer

# Download NLTK resources if not available
nltk.download('punkt')
nltk.download('stopwords')

# Load spaCy model
nlp = spacy.load("en_core_web_sm")

def preprocess_texts(texts):
    """
    Preprocess a list of texts by:
    - Lowercasing
    - Removing special characters and numbers
    - Tokenizing
    - Removing stopwords
    - Applying stemming and lemmatization
    Returns a cleaned sentence for each text.
    """
    stemmer = PorterStemmer()
    stop_words = set(stopwords.words("english"))
    processed_sentences = []

    for text in texts:
        # Lowercasing
        text = text.lower()

        # Removing special characters and numbers
        text = re.sub(r'[^a-z\s]', '', text)

        # Tokenization
        tokens = word_tokenize(text)

        # Removing stopwords
        tokens = [word for word in tokens if word not in stop_words]

        # Stemming
        stemmed_tokens = [stemmer.stem(word) for word in tokens]

        # Lemmatization
        doc = nlp(" ".join(stemmed_tokens))
        lemmatized_tokens = [token.lemma_ for token in doc]

        # Join words back into a sentence
        cleaned_sentence = " ".join(lemmatized_tokens)
        processed_sentences.append(cleaned_sentence)

    return processed_sentences

# Example Usage
texts = ["Running faster than before!", "The cars are driving smoothly on the road."]
result = preprocess_texts(texts)
print(result)
