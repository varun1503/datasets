def preprocess_content_chunks(content):
    """
    Groups content under one heading and one subheading.
    Returns list of chunks, each as:
    {
        "heading": "...",
        "subheading": "...",
        "paragraph": "...",
        "table": [...],
        "image_context": [...]
    }
    """
    id_to_item = {item['id']: item for item in content}
    chunks = []

    for item in content:
        if item["type"] != "heading":
            continue

        level = item.get("level", 1)
        heading_text = item["text"]
        chunk = {
            "heading": heading_text if level == 1 else None,
            "subheading": heading_text if level > 1 else None,
            "paragraph": "",
            "table": [],
            "image_context": []
        }

        # Traverse children
        child_ids = item.get("child_ids", [])
        for cid in child_ids:
            child = id_to_item[cid]
            ctype = child["type"]

            if ctype == "paragraph":
                chunk["paragraph"] += (child["text"].strip() + " ")

            elif ctype == "table":
                chunk["table"].append(child["data"])

            elif ctype == "image":
                img_data = child.get("image_context")
                if img_data:
                    chunk["image_context"].append(img_data)

        # Strip paragraph whitespace
        chunk["paragraph"] = chunk["paragraph"].strip()
        chunks.append(chunk)

    return chunks
