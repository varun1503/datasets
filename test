def extract_communities(self, triplets: List[str]):
    communities = []
    triples = []

    for obj in triplets:  # Each chunk is a list of triple strings
        obj = obj.strip("()")
        parts = [p.strip() for p in obj.split(",")]

        if len(parts) < 2:
            continue  # Skip malformed input

        community_raw = parts[0]
        community_split = [c.strip() for c in community_raw.split("and")]

        # Always append strings, never nested lists
        communities.extend(community_split)

        triple = parts[1:]
        triples.append("|".join(triple))

    return communities, triples
