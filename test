from langchain.schema import Document

def chunk_document(preprocess_chunk):
    final_chunk = []
    
    for i in range(1, len(preprocess_chunk)):
        chunk = preprocess_chunk[i]

        # Safety check
        if not isinstance(chunk, dict):
            print(f"Skipping index {i}: not a dict ->", type(chunk))
            continue

        metadata = {
            "heading": chunk.get("heading"),
            "subheading": chunk.get("subheading"),
            "image_context": chunk.get("image_context", []),
            "source": "10-K.html"
        }

        # Paragraph as one chunk
        paragraph = chunk.get("paragraph", "").strip()
        if paragraph:
            doc = Document(
                page_content=paragraph,
                metadata=metadata.copy()
            )
            final_chunk.append(doc)

        # Each table as separate chunk
        for table in chunk.get("table", []):
            table_str = "\n".join(["\t".join(row) for row in table])
            table_doc = Document(
                page_content=table_str,
                metadata=metadata.copy()
            )
            final_chunk.append(table_doc)

    # Wrap with filename
    source_key = preprocess_chunk[0].get("source", "10-K.html")
    return {source_key: final_chunk}
