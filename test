import os
import pandas as pd
from typing import Dict, Any, List

def save_chunks_to_csv(input_data: pd.DataFrame, csv_path: str) -> str:
    """
    Build rows exactly like your publish loop and save to a local CSV.
    Returns the absolute path of the saved CSV.
    """
    rows: List[Dict[str, Any]] = []

    # Infer a filename once (fall back to "None" like your code)
    file_name = input_data.iloc[0]['document_name'] if input_data.iloc[0].get('document_name') else "None"
    docx_type = "docx"

    for _, chunk in input_data.iterrows():
        # Handle content as a tuple: (kind, value)
        content_kind = None
        content_value = None
        if 'content' in chunk and isinstance(chunk['content'], (list, tuple)) and len(chunk['content']) >= 2:
            content_kind, content_value = chunk['content'][0], chunk['content'][1]

        row = {
            "type": docx_type,
            "chunked_content": chunk.get("paragraph_content", ""),
            "filename": file_name,
            "stage_id": None,  # add if you want a constant or column
            "filetype": docx_type,
            "source": file_name,
            "section_name": chunk.get("toc_section_name", "None"),
            "section_number": chunk.get("toc_section_number", "None"),
            "list_ID": chunk.get("toc_section_number", "None"),   # kept same as your code
            "table": content_value if content_kind == "table" else None,
            "image_context": content_value if content_kind == "image" else None,
            "style": chunk.get("style", ""),
            "style_extracted": chunk.get("style_extracted", ""),
            "start_index": 0,
            "end_index": len(chunk.get("paragraph_content", "")),
            "doc_format": "docx",
            "input_type": "doc"
        }
        rows.append(row)

    df_out = pd.DataFrame(rows)

    # Ensure folder exists and save
    csv_path = os.path.abspath(csv_path)
    os.makedirs(os.path.dirname(csv_path), exist_ok=True)
    df_out.to_csv(csv_path, index=False)

    return csv_path
