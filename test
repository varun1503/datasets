import ast

def safe_extract(meta_str):
    try:
        meta = ast.literal_eval(meta_str)
        if 'dataset' in meta and 'table' in meta:
            return meta['dataset'], meta['table']
    except Exception:
        pass
    return None, None

# Apply safe extraction
schema_dataframe[['dataset', 'table_name']] = schema_dataframe['meta_values'].apply(
    lambda x: pd.Series(safe_extract(x))
)

# Drop rows where either dataset or table_name is missing
schema_dataframe = schema_dataframe.dropna(subset=['dataset', 'table_name'])

# Create final modified column
schema_dataframe['table_name_modified'] = schema_dataframe['dataset'] + '.' + schema_dataframe['table_name']
