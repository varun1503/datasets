def get_cluster_triplets_by_file(keyspace, table, file_name, host='127.0.0.1', username=None, password=None):
    from cassandra.cluster import Cluster
    from cassandra.auth import PlainTextAuthProvider

    auth = PlainTextAuthProvider(username, password) if username else None
    cluster = Cluster([host], auth_provider=auth) if auth else Cluster([host])
    session = cluster.connect()
    session.set_keyspace(keyspace)

    # Retrieve all columns for the given file_name
    query = f"""
    SELECT * FROM {table}
    WHERE file_name = %s ALLOW FILTERING;
    """

    result = session.execute(query, (file_name,))
    data = result.one()

    session.shutdown()
    cluster.shutdown()

    if not data:
        print(f"No data found for file: {file_name}")
        return {}

    # Extract cluster triplets
    triplets = {}
    for col in data._fields:
        if col.startswith("cluster") and isinstance(getattr(data, col), list):
            triplets[col] = getattr(data, col)

    return triplets
