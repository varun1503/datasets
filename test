def is_heading_like(self, para):
    text = para.text.strip()

    if not text:
        return False

    # Reject if it starts with 'Figure', 'Table', 'Exhibit' + number (e.g., Figure 10.3)
    if re.match(r'^(Figure|Table|Exhibit)\s+\d+(\.\d+)*', text, re.IGNORECASE):
        return False

    # Accept numbered section headings like "1.", "2.1", "3.2.1"
    if re.match(r'^(\d+\.)+(\s+|$)', text):
        return True

    # Accept if all text is bold and no sentence punctuation
    bold_runs = [run.text.strip() for run in para.runs if run.bold and run.text.strip()]
    full_runs = [run.text.strip() for run in para.runs if run.text.strip()]

    if bold_runs and bold_runs == full_runs:
        if len(text.split()) < 12 and not text.endswith('.'):
            return True

    # All-uppercase short headings
    if text.isupper() and len(text.split()) < 10:
        return True

    return False
