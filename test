from langchain.storage import InMemoryDocstore
import os
import pickle

index_save_path = self.config["vectorstore"]["index_save_path"]
os.makedirs(index_save_path, exist_ok=True)
docstore_path = os.path.join(index_save_path, "docstore.pkl")

# Load existing docstore if it exists
if os.path.exists(docstore_path):
    with open(docstore_path, 'rb') as f:
        existing_doc_store = pickle.load(f)
    if not isinstance(existing_doc_store, InMemoryDocstore):
        raise TypeError("Loaded object is not an InMemoryDocstore")
else:
    existing_doc_store = InMemoryDocstore({})

# Merge new doc_store into existing one
existing_doc_store._dict.update(doc_store._dict)

# Save updated docstore
with open(docstore_path, 'wb') as f:
    pickle.dump(existing_doc_store, f)
