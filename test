import json
import ast
import re

def safe_json_loads(cell):
    """
    Safely parse a string that might look like a Python dict/list
    or a broken JSON with single quotes.
    """
    if isinstance(cell, (dict, list)):
        return cell  # already parsed
    
    if not isinstance(cell, str):
        return None
    
    # Try direct JSON load
    try:
        return json.loads(cell)
    except json.JSONDecodeError:
        pass
    
    # Try literal_eval (Python dict-like strings)
    try:
        return ast.literal_eval(cell)
    except Exception:
        pass
    
    # Fix common issues: replace single quotes with double quotes
    fixed = re.sub(r"'", '"', cell)
    fixed = fixed.replace("\\u", "\\\\u")  # escape unicode
    
    try:
        return json.loads(fixed)
    except Exception as e:
        print("Failed parsing:", e)
        return None
