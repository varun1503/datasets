import pandas as pd
from pathlib import Path

def process_chunks_to_csv(
    chunks,
    filename: str,
    root_dir: str,
    model_id: str = '4925',
    model_version: str = 'V1.0',
    model_type: str = 'LLM',
    market: str = 'Japan',
    metadata_type: str = 'tollgating',
    doc_type: str = 'docs',
    input_type: str = 'multimodal documents'
) -> pd.DataFrame:
    # Extract values using list comprehensions with safe .get()
    content_list = [chunk.get('content', '') for chunk in chunks]
    metadata_list = [chunk.get('metadata', {}) for chunk in chunks]
    end_index_list = [len(content) for content in content_list]

    n = len(content_list)
    metadata_type_list = [metadata_type] * n
    doc_type_list = [doc_type] * n
    input_type_list = [input_type] * n
    start_index_list = [0] * n  # Optional: replace with actual logic

    # Create DataFrame
    df = pd.DataFrame({
        'content': content_list,
        'metadata_content': metadata_list,
        'metadata_type': metadata_type_list,
        'start_index': start_index_list,
        'end_index': end_index_list,
        'doc_type': doc_type_list,
        'input_type': input_type_list,
        'modelID': [model_id] * n,
        'model_version': [model_version] * n,
        'model_type': [model_type] * n,
        'market': [market] * n
    })

    df.fillna('None', inplace=True)

    # Save to CSV
    output_path = Path(root_dir) / f"{filename}_preprocess.csv"
    df.to_csv(output_path, index=False)

    print(f"âœ… Preprocessed CSV saved at: {output_path}")
    return df
