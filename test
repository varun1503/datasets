import numpy as np

def pad_shap_data_mixed(shap_data, pad_value=""):
    """
    Pads all arrays in shap_values.data to the maximum length with a specified pad_value.

    Args:
        shap_data (list of np.ndarray): List of numpy arrays with different lengths (including strings).
        pad_value (str, int, float): Value to use for padding (default is an empty string for mixed types).

    Returns:
        np.ndarray: A list-based NumPy array with padded values.
    """
    max_len = max(len(arr) for arr in shap_data)  # Find max length

    # Pad each array with `pad_value`
    padded_arrays = [np.concatenate([arr, np.full((max_len - len(arr),), pad_value, dtype=object)]) 
                     if len(arr) < max_len else arr 
                     for arr in shap_data]
    
    return np.array(padded_arrays, dtype=object)  # Ensure mixed-type support

# Example usage
padded_shap_data = pad_shap_data_mixed(shap_values.data)
print(padded_shap_data.shape)  # Output: (5, max_len)
