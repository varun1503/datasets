import networkx as nx
from tqdm import tqdm

def create_graph_from_triplets(triplets):
    G = nx.DiGraph()
    
    for triplet in tqdm(triplets, desc="Creating graph"):
        # Handle if input is a string like: "'Visa','has','EPS']"
        cleaned = triplet.strip("[]").strip()
        parts = [p.strip(" '\"") for p in cleaned.split(',')]
        
        if len(parts) == 3:
            subject, predicate, obj = parts
            G.add_edge(subject, obj, label=predicate)
        elif len(parts) > 3:
            # Merge extra parts into obj
            subject = parts[0]
            predicate = parts[1]
            obj = ','.join(parts[2:]).strip(" '\"")
            G.add_edge(subject, obj, label=predicate)
        else:
            print(f"Skipping invalid triplet: {triplet}")
    
    return G
