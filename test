def parse_table_with_merged_cells(table):
    """
    Parses a docx table and handles vertically merged cells using <w:vMerge/>.
    Keeps natural column counts (does not force all rows to match longest).
    Removes exact duplicate rows.
    """
    merged_cells_tracker = {}  # Tracks content of vertically merged cells
    parsed_rows = []
    prev_row_text = None

    for row in table.rows:
        parsed_row = []

        for col_idx, cell in enumerate(row.cells):
            tc = cell._tc
            tcPr = tc.tcPr
            vmerge = tcPr.vMerge if tcPr is not None and tcPr.vMerge is not None else None

            if vmerge is not None:
                val = vmerge.val
                if val is None or val == 'continue':
                    parsed_row.append(merged_cells_tracker.get(col_idx, ""))
                else:
                    cell_text = get_cell_text(cell)
                    merged_cells_tracker[col_idx] = cell_text
                    parsed_row.append(cell_text)
            else:
                cell_text = get_cell_text(cell)
                merged_cells_tracker[col_idx] = cell_text
                parsed_row.append(cell_text)

        # Remove whitespace-only cells and empty trailing cells
        trimmed_row = [cell.strip() for cell in parsed_row if cell.strip() != ""]
        if trimmed_row:
            row_signature = " | ".join(trimmed_row)
            if row_signature != prev_row_text:
                parsed_rows.append(trimmed_row)
                prev_row_text = row_signature

    return parsed_rows
